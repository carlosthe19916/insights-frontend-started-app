kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: insights-frontend-started-app
objects:
  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      name: insights-frontend-started-app
      namespace: project-openubl
      labels:
        app: insights-frontend-started-app
        app.kubernetes.io/component: insights-frontend-started-app
        app.kubernetes.io/instance: insights-frontend-started-app
    spec:
      to:
        kind: Service
        name: insights-frontend-started-app
      port:
        targetPort: 8080-tcp
      wildcardPolicy: None

  - kind: Service
    apiVersion: v1
    metadata:
      name: insights-frontend-started-app
      namespace: project-openubl
      labels:
        app: insights-frontend-started-app
        app.kubernetes.io/component: insights-frontend-started-app
        app.kubernetes.io/instance: insights-frontend-started-app
    spec:
      ports:
        - name: 8080-tcp
          protocol: TCP
          port: 8080
          targetPort: 8080
      selector:
        deployment: insights-frontend-started-app
      type: ClusterIP
      sessionAffinity: None

  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: insights-frontend-started-app
      labels:
        app: insights-frontend-started-app
        app.kubernetes.io/component: insights-frontend-started-app
        app.kubernetes.io/instance: insights-frontend-started-app
      annotations:
        image.openshift.io/triggers: >-
          [{"from":{"kind":"ImageStreamTag","name":"insights-frontend-started-app:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"insights-frontend-started-app\")].image"}]
    spec:
      replicas: 1
      selector:
        matchLabels:
          deployment: insights-frontend-started-app
      template:
        metadata:
          labels:
            deployment: insights-frontend-started-app
        spec:
          containers:
            - name: insights-frontend-started-app
              image: ' '
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              imagePullPolicy: IfNotPresent
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 25%
          maxSurge: 25%

  - kind: ImageStream
    apiVersion: image.openshift.io/v1
    metadata:
      name: ubi8-s2i-web-app
      labels:
        app: insights-frontend-started-app
        app.kubernetes.io/component: insights-frontend-started-app
        app.kubernetes.io/instance: insights-frontend-started-app
    spec:
      tags:
        - name: latest
          annotations:
            openshift.io/imported-from: 'nodeshift/ubi8-s2i-web-app:latest'
          from:
            kind: DockerImage
            name: 'nodeshift/ubi8-s2i-web-app:latest'
          importPolicy: {}
          referencePolicy:
            type: Source

  - kind: ImageStream
    apiVersion: image.openshift.io/v1
    metadata:
      name: insights-frontend-started-app
      labels:
        app: insights-frontend-started-app
        app.kubernetes.io/component: insights-frontend-started-app
        app.kubernetes.io/instance: insights-frontend-started-app
    status:
      dockerImageRepository: ""

  - kind: BuildConfig
    apiVersion: build.openshift.io/v1
    metadata:
      name: insights-frontend-started-app
      labels:
        app: insights-frontend-started-app
        app.kubernetes.io/component: insights-frontend-started-app
        app.kubernetes.io/instance: insights-frontend-started-app
    spec:
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: 'insights-frontend-started-app:latest'
      resources: {}
      strategy:
        type: Source
        sourceStrategy:
          incremental: true
          forcePull: true
          from:
            kind: ImageStreamTag
            name: 'ubi8-s2i-web-app:latest'
          env:
            - name: OUTPUT_DIR
              value: dist
            - name: NPM_BUILD
              value: npm run build-standalone:prod
      source:
        type: Git
        git:
          uri: 'https://github.com/carlosthe19916/insights-frontend-started-app'
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChange: {}
      runPolicy: Serial
